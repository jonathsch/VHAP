[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build]
include = ["vhap/**/*.py"]

[project]
name = "VHAP"
version = "0.0.1"
requires-python = ">=3.9"
dependencies = [
  "tyro",
    "pyyaml",
    "numpy==1.22.3",
    "matplotlib==3.8.0",
    "scipy",
    "pillow",
    "opencv-python",
    "ffmpeg-python",
    "torch",  # manually install to avoid CUDA version mismatch
    "torchvision",  # manually install to avoid CUDA version mismatch
    "tensorboard",
    "chumpy",
    "trimesh",
    "nvdiffrast@git+https://github.com/ShenhanQian/nvdiffrast@backface-culling",
    "BackgroundMattingV2@git+https://github.com/ShenhanQian/BackgroundMattingV2",
    "STAR@git+https://github.com/ShenhanQian/STAR/",
    "dlib",  # for STAR
    "pandas",  # for STAR
    "gdown",  # for STAR
    "face-alignment",
    "face-detection-tflite",  # for face-alignment
    "pytorch3d@git+https://github.com/facebookresearch/pytorch3d.git",
    "dearpygui",
]
authors = [
  {name = "Shenhan Qian", email = "shenhan.qian@tum.de"},
]

description = "A complete head tracking pipeline from videos to NeRF-ready datasets."
readme = "README.md"

[tool.ruff]
line-length = 120
respect-gitignore = false
lint.select = [
    "E",  # pycodestyle errors.
    "F",  # Pyflakes rules.
    "I",  # isort formatting.
    "PLC",  # Pylint convention warnings.
    "PLE",  # Pylint errors.
    "PLR",  # Pylint refactor recommendations.
    "PLW",  # Pylint warnings.
    "NPY201" # NumPY 2.0 migration https://numpy.org/devdocs/numpy_2_0_migration_guide.html#ruff-plugin
]
lint.ignore = [
    "E501",  # Line too long.
    "F722",  # Forward annotation false positive from jaxtyping. Should be caught by pyright.
    "F821",  # Forward annotation false positive from jaxtyping. Should be caught by pyright.
    "PLR2004",  # Magic value used in comparison.
    "PLR0915",  # Too many statements.
    "PLR0913",  # Too many arguments.
    "PLC0414",  # Import alias does not rename variable. (this is used for exporting names)
    "PLC1901",  # Use falsey strings.
    "PLR5501",  # Use `elif` instead of `else if`.
    "PLR0911",  # Too many return statements.
    "PLR0912",  # Too many branches.
    "PLW0603",  # Globa statement updates are discouraged.
    "PLW2901",  # For loop variable overwritten.
    "PLR1730",  # Replace if statement with min/max
    "PLC0206",  # Extracting value from dictionary without calling `.items()`
]

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ["nerfstudio"]
split-on-trailing-comma = false